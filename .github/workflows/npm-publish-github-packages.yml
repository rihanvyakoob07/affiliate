name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.1'  # Specify Node.js version directly
          
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            
      - name: Install specific npm version
        run: npm install -g npm@9.6.7
        
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: npm test
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()  # Always attempt to upload, even if tests fail
        with:
          name: test-results
          path: |
            test-results
            coverage
          if-no-files-found: warn  # Warn instead of failing if no files are found

    env:
      CI: true

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.17.1'  # Specify Node.js version directly
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Deploy to production
        run: |
          # Add your deployment commands here
          echo "Deploying to production"
        
    env:
      CI: true
